# Applies to REST invocation of both CSA and Keystone. If set to true, requires standard Java certificate validation
# and hostname verification to pass; if false, ignores certificate validation and hostname verification to simplify
# less rigorous deployments.
idm.ssl.requireValidCertificate = false

# Properties of CSA server that manages organization LDAP configurations
idm.csa.protocol = https
idm.csa.hostname = localhost
idm.csa.port = 8444
idm.csa.username = csaTransportUser
idm.csa.password = ENC(REtzeMhhAKGpZi7pFkdN8G89E2XcY6z8dmY5n5RodOw=)
idm.csa.base = /consumption
idm.encryptedSigningKey=ENC(dzFE1yZw8E7x8xHklRqnHg==)

# Properties for CSA Auditing Server
idm.csa.audit.enabled = false
idm.csa.audit.retries = 6
idm.csa.audit.protocol = https
idm.csa.audit.hostname = localhost
idm.csa.audit.port = 8444
idm.csa.audit.servicePath = /csa/rest/audit/
idm.csa.audit.username = csaTransportUser
idm.csa.audit.password = ENC(REtzeMhhAKGpZi7pFkdN8G89E2XcY6z8dmY5n5RodOw=)

# Flag that indicates whether Keystone is enabled. If set to true, enables secondary authentication through Keystone;
# if set to false, disables secondary authentication through Keystone
idm.keystone.enabled = false
# Flag that indicates whether secondary authentication is required. If set to true, requires secondary (Keystone)
# authentication to succeed in order for authentication to succeed. If set to false. authentication succeeds if primary
# (generally LDAP or Active Directory) authentication succeeds, regardless of whether secondary (Keystone)
# authentication succeeds.
idm.keystone.required = false

# Properties of Keystone server that manages Keystone configuration. If there is no Keystone configuration, these
# properties should not be commented out--they will be ignored.
idm.keystone.protocol = http
idm.keystone.hostname = keystone
idm.keystone.port = 5000
idm.keystone.servicePath = v3
idm.keystone.domainName = Default
idm.keystone.transportUsername = consumer
idm.keystone.transportPassword = encrypted
idm.keystone.transportProject = CSA_CONSUMER

# Properties for properly configuring the database access. Each line has the following format:
#
#      hibernate.property_name=property_value

# Database connection settings
idm.persistence.connection.driver.class = org.postgresql.Driver
# Update this url to have your correct information
idm.persistence.connection.url = jdbc:postgresql://localhost:5432/idmdb
# Database connection user settings
idm.persistence.connection.username = idm
idm.persistence.connection.password = changeit
# JDBC connection pool (use the built-in)
idm.persistence.connection.pool_size = 10
# The oracle thin driver cannot batch clobs or anything > 4000 characters.
# http://forum.hibernate.org/viewtopic.php?t=93527&highlight=multiple
# http://www.hibernate.org/56.html
idm.persistence.jdbc.batch_size = 0
# SQL dialect
# Change to commented out version for Hibernate 4.3.4.Final
# hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect
idm.persistence.dialect = org.hibernate.dialect.PostgreSQLDialect
# Disable the second-level cache
idm.persistence.cache.provider_class = org.hibernate.cache.internal.StandardQueryCache
# Echo all executed SQL to stdout
idm.persistence.show_sql = false
# Drop and re-create the database schema on startup if set to 'create'
# Leaves the database schema intact if set to 'validate'
idm.persistence.hbm2ddl.auto = validate
idm.persistence.flyway.type = postgresql
